@use "sass:map";

@function encodecolor($string) {
	@if type-of($string) == 'color' {
        $hex: str-slice(ie-hex-str($string), 4);
        $string:unquote("#{$hex}");
    }
    $string: '%23' + $string;
	@return $string;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  --webkit-font-smoothing: antialiased;
  outline-color: rgba(229, 89, 71, 0.3);
}

body {
  background-color: $primary;
}

// BUTTONS
.btn-primary {
  background-color: $white;
  color: $primary;
  border: 0;
  &:hover, &:active, &:focus {
    background-color: $white;
    color: $primary;
  }
}
.btn-light {
  background-color: $white;
  color: map.get($colors, "gray");
}

.btn-secondary {
  background-color: shade-color($primary, 20%);
  color: $white;
  border: 2px dashed $white;
  transition: all 0.2s ease-in-out;
  &:hover,  &:active, &:focus {
    background-color: shade-color($primary, 30%);
    border: 2px dashed $white;
  }
}

.select {
  height: fit-content;
  width: fit-content;
}

.select-primary {
  background-color: transparent;
  border: 2px solid $white;
  color: $white;
  &:hover, &:active, &:focus {
    background-color: transparent;
    color: $white;
  }

  option {
    color: $black;
  }
  
}

.select-secondary {
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{encodecolor($black)}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/></svg>");
}


.braindump {
  textarea {
    border: none;
    border-left: 4px solid $black;
    resize: vertical;
    width: 100%;
    min-height: 18.75rem;
    padding: 1rem;
    margin-top: 0.5rem;
  }
}

.braindump, .top-prioritites {
  max-width: 22.5rem;
}
.border-left {
  border-left: 4px solid $black;
}

.text-gray {
  color: map.get($colors, "gray");
}

@import './components/add_task_component';
